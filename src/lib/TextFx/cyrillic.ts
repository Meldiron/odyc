export const cyrillic = [
	[0xe0, 0x00, 0xfe, 0x62, 0x78, 0x62, 0xfe, 0x00], // 0400 (uni0400)
	[0x6c, 0xfe, 0x62, 0x78, 0x60, 0x62, 0xfe, 0x00], // 0401 (afii10023)
	[0xfc, 0x60, 0x7c, 0x66, 0x66, 0x66, 0x6c, 0x00], // 0402 (afii10051)
	[0x38, 0x20, 0xfe, 0xc6, 0xc0, 0xc0, 0xc0, 0x00], // 0403 (afii10052)
	[0x3c, 0x66, 0xc0, 0xf8, 0xc0, 0x66, 0x3c, 0x00], // 0404 (afii10053)
	[0x3c, 0x66, 0x70, 0x38, 0x0e, 0x66, 0x3c, 0x00], // 0405 (afii10054)
	[0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00], // 0406 (afii10055)
	[0x66, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00], // 0407 (afii10056)
	[0x1e, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00], // 0408 (afii10057)
	[0xf8, 0x58, 0x5c, 0x5a, 0x5a, 0x5a, 0xdc, 0x00], // 0409 (afii10058)
	[0xd8, 0xd8, 0xd8, 0xfc, 0xda, 0xda, 0xdc, 0x00], // 040a (afii10059)
	[0xf8, 0x60, 0x7c, 0x66, 0x66, 0x66, 0x66, 0x00], // 040b (afii10060)
	[0x18, 0xe6, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00], // 040c (afii10061)
	[0x70, 0x10, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x00], // 040d (uni040D)
	[0x38, 0x00, 0xc6, 0xc6, 0x7e, 0x06, 0x7c, 0x00], // 040e (afii10062)
	[0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0x10], // 040f (afii10145)
	[0x30, 0x78, 0xcc, 0xcc, 0xfc, 0xcc, 0xcc, 0x00], // 0410 (afii10017)
	[0xfe, 0x66, 0x60, 0x7c, 0x66, 0x66, 0xfc, 0x00], // 0411 (afii10018)
	[0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00], // 0412 (afii10019)
	[0xfe, 0x66, 0x62, 0x60, 0x60, 0x60, 0xf0, 0x00], // 0413 (afii10020)
	[0x1e, 0x36, 0x66, 0x66, 0x66, 0x66, 0xff, 0xc3], // 0414 (afii10021)
	[0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00], // 0415 (afii10022)
	[0xd6, 0xd6, 0x7c, 0x38, 0x7c, 0xd6, 0xd6, 0x00], // 0416 (afii10024)
	[0x7c, 0xc6, 0x06, 0x3c, 0x06, 0xc6, 0x7c, 0x00], // 0417 (afii10025)
	[0xc6, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0x00], // 0418 (afii10026)
	[0x38, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0x00], // 0419 (afii10027)
	[0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00], // 041a (afii10028)
	[0x1e, 0x36, 0x66, 0x66, 0x66, 0x66, 0xc6, 0x00], // 041b (afii10029)
	[0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00], // 041c (afii10030)
	[0x66, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x66, 0x00], // 041d (afii10031)
	[0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00], // 041e (afii10032)
	[0x7e, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00], // 041f (afii10033)
	[0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0xf0, 0x00], // 0420 (afii10034)
	[0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00], // 0421 (afii10035)
	[0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00], // 0422 (afii10036)
	[0x66, 0x66, 0x66, 0x3e, 0x06, 0x66, 0x3c, 0x00], // 0423 (afii10037)
	[0x7c, 0xd6, 0xd6, 0xd6, 0x7c, 0x10, 0x38, 0x00], // 0424 (afii10038)
	[0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00], // 0425 (afii10039)
	[0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xfe, 0x06], // 0426 (afii10040)
	[0x66, 0x66, 0x66, 0x3e, 0x06, 0x06, 0x06, 0x00], // 0427 (afii10041)
	[0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xfe, 0x00], // 0428 (afii10042)
	[0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xff, 0x03], // 0429 (afii10043)
	[0xf0, 0xb0, 0xb0, 0x3c, 0x36, 0x36, 0x3c, 0x00], // 042a (afii10044)
	[0xc6, 0xc6, 0xc6, 0xf6, 0xde, 0xde, 0xf6, 0x00], // 042b (afii10045)
	[0xf0, 0x60, 0x60, 0x7c, 0x66, 0x66, 0x7c, 0x00], // 042c (afii10046)
	[0x78, 0x8c, 0x06, 0x3e, 0x06, 0x8c, 0x78, 0x00], // 042d (afii10047)
	[0xcc, 0xd6, 0xd6, 0xf6, 0xd6, 0xd6, 0xcc, 0x00], // 042e (afii10048)
	[0x3e, 0x66, 0x66, 0x66, 0x3e, 0x36, 0x66, 0x00], // 042f (afii10049)
	[0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00], // 0430 (afii10065)
	[0x06, 0x3c, 0x60, 0x3c, 0x66, 0x66, 0x3c, 0x00], // 0431 (afii10066)
	[0x00, 0x00, 0xfc, 0x66, 0x7c, 0x66, 0xfc, 0x00], // 0432 (afii10067)
	[0x00, 0x00, 0xfe, 0x66, 0x60, 0x60, 0xf0, 0x00], // 0433 (afii10068)
	[0x00, 0x00, 0x3c, 0x6c, 0x6c, 0x6c, 0xfe, 0xc6], // 0434 (afii10069)
	[0x00, 0x00, 0x3c, 0x66, 0x7e, 0x60, 0x3c, 0x00], // 0435 (afii10070)
	[0x00, 0x00, 0xd6, 0x7c, 0x38, 0x7c, 0xd6, 0x00], // 0436 (afii10072)
	[0x00, 0x00, 0x7c, 0xc6, 0x1c, 0xc6, 0x7c, 0x00], // 0437 (afii10073)
	[0x00, 0x00, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x00], // 0438 (afii10074)
	[0x6c, 0x38, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x00], // 0439 (afii10075)
	[0x00, 0x00, 0xe6, 0x6c, 0x78, 0x6c, 0xe6, 0x00], // 043a (afii10076)
	[0x00, 0x00, 0x3e, 0x66, 0x66, 0x66, 0xe6, 0x00], // 043b (afii10077)
	[0x00, 0x00, 0xc6, 0xfe, 0xfe, 0xd6, 0xc6, 0x00], // 043c (afii10078)
	[0x00, 0x00, 0x66, 0x66, 0x7e, 0x66, 0x66, 0x00], // 043d (afii10079)
	[0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x00], // 043e (afii10080)
	[0x00, 0x00, 0x7e, 0x66, 0x66, 0x66, 0x66, 0x00], // 043f (afii10081)
	[0x00, 0x00, 0xfc, 0x66, 0x66, 0x7c, 0x60, 0xf0], // 0440 (afii10082)
	[0x00, 0x00, 0x3c, 0x66, 0x60, 0x66, 0x3c, 0x00], // 0441 (afii10083)
	[0x00, 0x00, 0x7e, 0x5a, 0x18, 0x18, 0x3c, 0x00], // 0442 (afii10084)
	[0x00, 0x00, 0x66, 0x66, 0x66, 0x3e, 0x06, 0x7c], // 0443 (afii10085)
	[0x00, 0x00, 0x7c, 0xd6, 0xd6, 0x7c, 0x10, 0x38], // 0444 (afii10086)
	[0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00], // 0445 (afii10087)
	[0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xfe, 0x06], // 0446 (afii10088)
	[0x00, 0x00, 0x66, 0x66, 0x3e, 0x06, 0x06, 0x00], // 0447 (afii10089)
	[0x00, 0x00, 0xd6, 0xd6, 0xd6, 0xd6, 0xfe, 0x00], // 0448 (afii10090)
	[0x00, 0x00, 0xd6, 0xd6, 0xd6, 0xd6, 0xff, 0x03], // 0449 (afii10091)
	[0x00, 0x00, 0xf0, 0xb0, 0x3c, 0x36, 0x3c, 0x00], // 044a (afii10092)
	[0x00, 0x00, 0xc6, 0xc6, 0xf6, 0xde, 0xf6, 0x00], // 044b (afii10093)
	[0x00, 0x00, 0xf0, 0x60, 0x7c, 0x66, 0xfc, 0x00], // 044c (afii10094)
	[0x00, 0x00, 0x7c, 0xc6, 0x1e, 0xc6, 0x7c, 0x00], // 044d (afii10095)
	[0x00, 0x00, 0xcc, 0xd6, 0xf6, 0xd6, 0xcc, 0x00], // 044e (afii10096)
	[0x00, 0x00, 0x3e, 0x66, 0x3e, 0x36, 0x66, 0x00], // 044f (afii10097)
	[0x70, 0x00, 0x3c, 0x66, 0x7e, 0x60, 0x3c, 0x00], // 0450 (uni0450)
	[0x66, 0x00, 0x3c, 0x66, 0x7e, 0x60, 0x3c, 0x00], // 0451 (afii10071)
	[0x60, 0xf0, 0x60, 0x7c, 0x66, 0x66, 0x66, 0x0c], // 0452 (afii10099)
	[0x1c, 0x10, 0x00, 0x7e, 0x60, 0x60, 0x60, 0x00], // 0453 (afii10100)
	[0x00, 0x00, 0x7c, 0xc6, 0xf0, 0xc6, 0x7c, 0x00], // 0454 (afii10101)
	[0x00, 0x00, 0x3e, 0x60, 0x3c, 0x06, 0x7c, 0x00], // 0455 (afii10102)
	[0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00], // 0456 (afii10103)
	[0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00], // 0457 (afii10104)
	[0x06, 0x00, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c], // 0458 (afii10105)
	[0x00, 0x00, 0xf8, 0x58, 0x5c, 0x5a, 0xdc, 0x00], // 0459 (afii10106)
	[0x00, 0x00, 0xd8, 0xd8, 0xfc, 0xda, 0xdc, 0x00], // 045a (afii10107)
	[0x60, 0xf0, 0x60, 0x7c, 0x66, 0x66, 0x66, 0x00], // 045b (afii10108)
	[0x1c, 0x10, 0xe6, 0x6c, 0x78, 0x6c, 0xe6, 0x00], // 045c (afii10109)
	[0x38, 0x08, 0x00, 0x66, 0x6e, 0x7e, 0x76, 0x00], // 045d (uni045D)
	[0x6c, 0x38, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x7c], // 045e (afii10110)
	[0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0x10], // 045f (afii10193)
	[0x06, 0xfe, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00], // 0490 (afii10050)
	[0x00, 0x06, 0xfe, 0x60, 0x60, 0x60, 0xf0, 0x00], // 0491 (afii10098)
	[0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 05be (afii57645)
	[0x00, 0xc6, 0x66, 0x76, 0xdc, 0xcc, 0xc6, 0x00], // 05d0 (afii57664)
	[0x00, 0xf8, 0x0c, 0x0c, 0x0c, 0x0c, 0xfe, 0x00], // 05d1 (afii57665)
	[0x00, 0x38, 0x0c, 0x0c, 0x1c, 0x34, 0xe6, 0x00], // 05d2 (afii57666)
	[0x00, 0xfe, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x00], // 05d3 (afii57667)
	[0x00, 0xfc, 0x06, 0x06, 0xc6, 0xc6, 0xc6, 0x00], // 05d4 (afii57668)
	[0x00, 0x70, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00], // 05d5 (afii57669)
	[0x00, 0x3c, 0x18, 0x18, 0x0c, 0x18, 0x30, 0x00], // 05d6 (afii57670)
	[0x00, 0xfc, 0x66, 0xc6, 0xc6, 0xc6, 0xc6, 0x00], // 05d7 (afii57671)
	[0x00, 0xcc, 0xd6, 0xd6, 0xc6, 0xcc, 0x78, 0x00], // 05d8 (afii57672)
	[0x00, 0x38, 0x0c, 0x0c, 0x18, 0x00, 0x00, 0x00], // 05d9 (afii57673)
	[0x00, 0xfc, 0x06, 0x06, 0x0c, 0x0c, 0x0c, 0x0e], // 05da (afii57674)
	[0x00, 0xfc, 0x06, 0x06, 0x06, 0x06, 0xfc, 0x00], // 05db (afii57675)
	[0xc0, 0xfc, 0x06, 0x06, 0x0c, 0x18, 0x18, 0x00], // 05dc (afii57676)
	[0x00, 0xfc, 0x66, 0xc6, 0xc6, 0xc6, 0xfe, 0x00], // 05dd (afii57677)
	[0x00, 0xdc, 0x76, 0x66, 0xc6, 0xc6, 0xde, 0x00], // 05de (afii57678)
	[0x00, 0x38, 0x0c, 0x18, 0x18, 0x18, 0x18, 0x1c], // 05df (afii57679)
	[0x00, 0x38, 0x0c, 0x0c, 0x0c, 0x0c, 0x7c, 0x00], // 05e0 (afii57680)
	[0x00, 0xfc, 0x66, 0xc6, 0xc6, 0xcc, 0x78, 0x00], // 05e1 (afii57681)
	[0x00, 0x66, 0x66, 0x66, 0x66, 0x36, 0xfc, 0x00], // 05e2 (afii57682)
	[0x00, 0xf8, 0x4c, 0xcc, 0xec, 0x0c, 0x0c, 0x0e], // 05e3 (afii57683)
	[0x00, 0xfc, 0x46, 0xc6, 0xe6, 0x06, 0xfe, 0x00], // 05e4 (afii57684)
	[0x00, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x70], // 05e5 (afii57685)
	[0x00, 0x66, 0x36, 0x1c, 0x0c, 0x06, 0x7e, 0x00], // 05e6 (afii57686)
	[0x00, 0xfc, 0x06, 0x66, 0x6c, 0x6e, 0x60, 0x60], // 05e7 (afii57687)
	[0x00, 0xfc, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00], // 05e8 (afii57688)
	[0x00, 0xd6, 0xd6, 0xd6, 0xf6, 0xc6, 0x7c, 0x00], // 05e9 (afii57689)
	[0x00, 0xfc, 0x66, 0x66, 0x66, 0xe6, 0xe6, 0x00], // 05ea (afii57690)
	[0x00, 0xcc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00], // 05f0 (afii57716)
	[0x00, 0xcc, 0x66, 0x66, 0x06, 0x06, 0x06, 0x00], // 05f1 (afii57717)
	[0x00, 0xcc, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00], // 05f2 (afii57718)
	[0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00], // 05f3 (uni05F3)
	[0x66, 0x66, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00], // 05f4 (uni05F4)
	[0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x00], // 1d1b (uni1D1B)
	[0x00, 0xfc, 0xcc, 0xc0, 0xc0, 0xc0, 0xc0, 0x00], // 1d26 (uni1D26)
	[0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00], // 1d28 (uni1D28)
	[0xe0, 0x00, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00], // 1e80 (Wgrave)
	[0xe0, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00], // 1e81 (wgrave)
	[0x0e, 0x00, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00], // 1e82 (Wacute)
	[0x0e, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00], // 1e83 (wacute)
	[0xc6, 0x00, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00], // 1e84 (Wdieresis)
	[0xc6, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00], // 1e85 (wdieresis)
	[0x1c, 0x30, 0x18, 0x7c, 0xcc, 0xcc, 0x78, 0x00], // 1e9f (uni1E9F)
	[0xe0, 0x00, 0xcc, 0xcc, 0x78, 0x30, 0x78, 0x00], // 1ef2 (Ygrave)
	[0x00, 0xe0, 0x00, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8], // 1ef3 (ygrave)
	[0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00], // 2010 (uni2010)
	[0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00], // 2012 (figuredash)
	[0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00], // 2013 (endash)
	[0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00], // 2014 (emdash)
	[0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00], // 2015 (afii00208)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff], // 2017 (underscoredbl)
	[0x18, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00], // 2018 (quoteleft)
	[0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00], // 2019 (quoteright)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60], // 201a (quotesinglbase)
	[0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00], // 201b (quotereversed)
	[0x66, 0xcc, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00], // 201c (quotedblleft)
	[0x66, 0x66, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00], // 201d (quotedblright)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0xcc], // 201e (quotedblbase)
	[0xcc, 0xcc, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00], // 201f (uni201F)
	[0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x30, 0x30], // 2020 (dagger)
	[0x30, 0x30, 0xfc, 0x30, 0x30, 0xfc, 0x30, 0x30], // 2021 (daggerdbl)
	[0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00], // 2022 (bullet)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0xdb, 0x00], // 2026 (ellipsis)
	[0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00], // 2027 (uni2027)
	[0x00, 0xcc, 0xd8, 0x30, 0x60, 0xdb, 0x9b, 0x00], // 2030 (perthousand)
	[0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00], // 2032 (minute)
	[0x36, 0x6c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00], // 2033 (second)
	[0x60, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00], // 2035 (uni2035)
	[0x00, 0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0x00], // 2039 (guilsinglleft)
	[0x00, 0x60, 0x30, 0x18, 0x30, 0x60, 0x00, 0x00], // 203a (guilsinglright)
	[0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00], // 203c (exclamdbl)
	[0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 203e (uni203E)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x7c], // 203f (uni203F)
	[0x7c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 2040 (uni2040)
	[0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00], // 2044 (fraction)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6], // 2054 (uni2054)
	[0x18, 0x38, 0x78, 0x7c, 0x18, 0x00, 0x00, 0x00], // 2074 (uni2074)
	[0x78, 0x60, 0x70, 0x18, 0x70, 0x00, 0x00, 0x00], // 2075 (uni2075)
	[0x38, 0x60, 0x78, 0x6c, 0x38, 0x00, 0x00, 0x00], // 2076 (uni2076)
	[0x7c, 0x0c, 0x18, 0x30, 0x30, 0x00, 0x00, 0x00], // 2077 (uni2077)
	[0x38, 0x6c, 0x38, 0x6c, 0x38, 0x00, 0x00, 0x00], // 2078 (uni2078)
	[0x38, 0x6c, 0x3c, 0x0c, 0x38, 0x00, 0x00, 0x00], // 2079 (uni2079)
	[0x30, 0x30, 0xfc, 0x30, 0x30, 0x00, 0x00, 0x00], // 207a (uni207A)
	[0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00], // 207b (uni207B)
	[0x78, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00], // 207f (uni207F)
	[0x00, 0x00, 0x00, 0x30, 0x70, 0x30, 0x30, 0x78], // 2081 (uni2081)
	[0x00, 0x00, 0x00, 0x70, 0x18, 0x30, 0x60, 0x78], // 2082 (uni2082)
	[0x00, 0x00, 0x00, 0x70, 0x18, 0x30, 0x18, 0x70], // 2083 (uni2083)
	[0x00, 0x00, 0x00, 0x18, 0x38, 0x78, 0x7c, 0x18], // 2084 (uni2084)
	[0x00, 0x00, 0x00, 0x78, 0x60, 0x70, 0x18, 0x70], // 2085 (uni2085)
	[0x00, 0x00, 0x00, 0x38, 0x60, 0x78, 0x6c, 0x38], // 2086 (uni2086)
	[0x00, 0x00, 0x00, 0x7c, 0x0c, 0x18, 0x30, 0x30], // 2087 (uni2087)
	[0x00, 0x00, 0x00, 0x38, 0x6c, 0x38, 0x6c, 0x38], // 2088 (uni2088)
	[0x00, 0x00, 0x00, 0x38, 0x6c, 0x3c, 0x0c, 0x38], // 2089 (uni2089)
	[0x00, 0x00, 0x00, 0x30, 0x30, 0xfc, 0x30, 0x30], // 208a (uni208A)
	[0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00], // 208b (uni208B)
	[0xfe, 0x62, 0x68, 0x78, 0x68, 0x60, 0xf0, 0x60], // 20a3 (franc)
	[0x3c, 0x66, 0xf2, 0x60, 0xf0, 0x66, 0xfc, 0x00], // 20a4 (lira)
	[0xf8, 0xcc, 0xcc, 0xfa, 0xc6, 0xcf, 0xc6, 0xc7], // 20a7 (peseta)
	[0x00, 0xfa, 0x8a, 0xaa, 0xaa, 0xa2, 0xbe, 0x00], // 20aa (afii57636)
	[0x3c, 0x62, 0xf8, 0x60, 0xf8, 0x62, 0x3c, 0x00], // 20ac (Euro)
	[0x73, 0xc6, 0xcc, 0x78, 0x3e, 0x7b, 0xdb, 0x0e], // 2105 (afii61248)
	[0x10, 0x38, 0x6c, 0x6c, 0x38, 0x34, 0x58, 0x00], // 2113 (afii61289)
	[0xcf, 0xed, 0xff, 0xdc, 0xcf, 0xcc, 0xcc, 0x00], // 2116 (afii61352)
	[0xf1, 0x5b, 0x55, 0x51, 0x00, 0x00, 0x00, 0x00], // 2122 (trademark)
	[0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x6c, 0xee, 0x00], // 2126 (Omega)
	[0x00, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00], // 212e (estimated)
	[0xc3, 0xc6, 0xcc, 0xd8, 0x3f, 0x63, 0xc6, 0x06], // 2150 (uni2150)
	[0xc3, 0xc6, 0xcc, 0xde, 0x3b, 0x6f, 0xc3, 0x0e], // 2151 (uni2151)
	[0xc3, 0xc6, 0xcc, 0xde, 0x33, 0x66, 0xc3, 0x0e], // 2153 (onethird)
	[0xc3, 0x66, 0xcc, 0xfe, 0x33, 0x66, 0xc3, 0x0e], // 2154 (twothirds)
	[0xc3, 0xc6, 0xcc, 0xdf, 0x3c, 0x6e, 0xc3, 0x0e], // 2155 (uni2155)
	[0xc3, 0x66, 0xcc, 0xff, 0x3c, 0x6e, 0xc3, 0x0e], // 2156 (uni2156)
	[0xe3, 0x36, 0x6c, 0x3f, 0xfc, 0x6e, 0xc3, 0x0e], // 2157 (uni2157)
	[0x33, 0x76, 0xfc, 0x3f, 0x3c, 0x6e, 0xc3, 0x0e], // 2158 (uni2158)
	[0xc3, 0xc6, 0xcc, 0xde, 0x38, 0x7e, 0xdb, 0x0e], // 2159 (uni2159)
	[0xf3, 0xc6, 0xec, 0x3e, 0xf8, 0x7e, 0xdb, 0x0e], // 215a (uni215A)
	[0xc3, 0xc6, 0xcc, 0xde, 0x3b, 0x6e, 0xdb, 0x0e], // 215b (oneeighth)
	[0xe3, 0x36, 0x6c, 0x3e, 0xfb, 0x6e, 0xdb, 0x0e], // 215c (threeeighths)
	[0xf3, 0xc6, 0xec, 0x3e, 0xfb, 0x6e, 0xdb, 0x0e], // 215d (fiveeighths)
	[0xf3, 0x36, 0x6c, 0xde, 0x3b, 0x6e, 0xdb, 0x0e], // 215e (seveneighths)
	[0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00], // 2190 (arrowleft)
	[0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x00], // 2191 (arrowup)
	[0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00], // 2192 (arrowright)
	[0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00], // 2193 (arrowdown)
	[0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00], // 2194 (arrowboth)
	[0x18, 0x3c, 0x7e, 0x18, 0x18, 0x7e, 0x3c, 0x18], // 2195 (arrowupdn)
	[0x18, 0x3c, 0x7e, 0x18, 0x7e, 0x3c, 0x18, 0xff], // 21a8 (arrowupdnbse)
	[0x38, 0x6c, 0x0c, 0x7c, 0xcc, 0xcc, 0x78, 0x00], // 2202 (partialdiff)
	[0x06, 0x0c, 0x7e, 0xdb, 0xdb, 0x7e, 0x30, 0x60], // 2205 (emptyset)
	[0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xfe, 0x00], // 2206 (Delta)
	[0x38, 0x60, 0xc0, 0xf8, 0xc0, 0x60, 0x38, 0x00], // 2208 (element)
	[0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6], // 220f (product)
	[0xfc, 0xcc, 0x60, 0x30, 0x60, 0xcc, 0xfc, 0x00], // 2211 (summation)
	[0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00], // 2212 (minus)
	[0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00], // 2215 (uni2215)
	[0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00], // 2219 (uni2219)
	[0x0f, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x3c, 0x1c], // 221a (radical)
	[0x00, 0x00, 0x7e, 0xdb, 0xdb, 0x7e, 0x00, 0x00], // 221e (infinity)
	[0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00], // 221f (orthogonal)
	[0x78, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x00], // 2229 (intersection)
	[0x0e, 0x1b, 0x1b, 0x18, 0x18, 0xd8, 0xd8, 0x70], // 222b (integral)
	[0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00], // 2248 (approxequal)
	[0x00, 0x0c, 0xfe, 0x18, 0x30, 0xfe, 0x60, 0x00], // 2260 (notequal)
	[0x00, 0xfc, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x00], // 2261 (equivalence)
	[0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0xfc, 0x00], // 2264 (lessequal)
	[0x60, 0x30, 0x18, 0x30, 0x60, 0x00, 0xfc, 0x00], // 2265 (greaterequal)
	[0x7c, 0xc6, 0xc6, 0xd6, 0xc6, 0xc6, 0x7c, 0x00], // 2299 (uni2299)
	[0x7c, 0xc6, 0xce, 0xd6, 0xe6, 0xc6, 0x7c, 0x00], // 2300 (uni2300)
	[0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00], // 2302 (house)
	[0x00, 0x00, 0x00, 0xfc, 0xc0, 0xc0, 0x00, 0x00], // 2310 (revlogicalnot)
	[0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18], // 2320 (integraltp)
	[0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0x70], // 2321 (integralbt)
	[0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00], // 2500 (SF100000)
	[0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18], // 2502 (SF110000)
	[0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18], // 250c (SF010000)
	[0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18], // 2510 (SF030000)
	[0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00], // 2514 (SF020000)
	[0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00], // 2518 (SF040000)
].map((c) => c.map(reverseByte))

function reverseByte(byte: number) {
	let reversed = 0
	for (let i = 0; i < 8; i++) {
		reversed = (reversed << 1) | (byte & 1)
		byte >>= 1
	}
	return reversed
}
